{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "practicesynapseworkspace"
		},
		"BackupContactLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BackupContactLS'"
		},
		"SQLTableWatermarkLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQLTableWatermarkLS'"
		},
		"StoredContactsLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'StoredContactsLS'"
		},
		"practicesynapseworkspace-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'practicesynapseworkspace-WorkspaceDefaultSqlServer'"
		},
		"practicesynapseworkspace-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://practicestoragessb.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/BackupContacts')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "GetLastRun",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT WatermarkValue FROM [dbo].[SQLTableWatermark] where TableName = 'contacts'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableWatermark",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy Files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetLastRun",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@activity('GetLastRun').output.firstRow.WatermarkValue",
										"type": "Expression"
									},
									"modifiedDatetimeEnd": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "StoredContacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BackupContacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SetLastRun",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[update_sqltablewatermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "contacts",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLTableWatermarkLS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-01-20T15:40:11Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQLTableWatermark')]",
				"[concat(variables('workspaceId'), '/datasets/StoredContacts')]",
				"[concat(variables('workspaceId'), '/datasets/BackupContacts')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQLTableWatermarkLS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/BackupContacts')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BackupContactLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "backup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/BackupContactLS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLTableWatermark')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLTableWatermarkLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "WatermarkValue",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SqlTableWatermark"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SQLTableWatermarkLS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/StoredContacts')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StoredContactsLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "50-contacts.csv",
						"folderPath": "2020/april",
						"container": "contacts"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/StoredContactsLS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/BackupContactLS')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BackupContactLS_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLTableWatermarkLS')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQLTableWatermarkLS_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/StoredContactsLS')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('StoredContactsLS_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/practicesynapseworkspace-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('practicesynapseworkspace-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/practicesynapseworkspace-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('practicesynapseworkspace-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Security Script')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "/*Schema A creation + Table creation */\nCREATE SCHEMA [SchemaA]\nGO\nCREATE TABLE [SchemaA].[Employee]\n(\n    EmployeeKey INT,\n    EmployeeName VARCHAR(30),\n    EmployeeRole VARCHAR(20),\n    Salary INT\n);\nGO\n\nINSERT INTO [SchemaA].[Employee] (EmployeeKey, EmployeeName, EmployeeRole, Salary)\nVALUES (1, 'EmployeeA', 'Engineer', 100000);\nINSERT INTO [SchemaA].[Employee] (EmployeeKey, EmployeeName, EmployeeRole, Salary)\nVALUES (2, 'EmployeeB', 'Sales', 90000);\nINSERT INTO [SchemaA].[Employee] (EmployeeKey, EmployeeName, EmployeeRole, Salary)\nVALUES (3, 'EmployeeC', 'Manager', 200000);\n\n\n/*Schema B creation + View creation */\nCREATE SCHEMA [SchemaB]\nGO\nCREATE VIEW [SchemaB].[ViewNoSalary]\nAS\nSELECT\na.EmployeeKey,\na.EmployeeName,\na.EmployeeRole\nFROM [SchemaA].[Employee] a;\n\n/* AD Authentication */\nCREATE USER [sbahadur@microsoft.com] FROM EXTERNAL PROVIDER;\n\nGRANT SELECT ON OBJECT::[SchemaB].[ViewNoSalary] TO [sbahadur@microsoft.com]\nGO\n\nEXECUTE AS USER = 'sbahadur@microsoft.com';\nGO\nSELECT * FROM [SchemaB].[ViewNoSalary];\n\nEXECUTE AS USER = 'sbahadur@microsoft.com';\nGO\nSELECT * FROM [SchemaA].[Employee];\n\n\n/* SQL Users Authentication */\nCREATE USER TestProcess WITHOUT LOGIN;\n\nGRANT SELECT ON OBJECT::[SchemaB].[ViewNoSalary] TO TestProcess\nGO\n\nEXECUTE AS USER = 'TestProcess';\nGO\nSELECT * FROM [SchemaB].[ViewNoSalary];\n\nEXECUTE AS USER = 'TestProcess';\nGO\nSELECT * FROM [SchemaA].[Employee];",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "SQLPOOL",
						"databaseName": "SQLPOOL"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLPOOL')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": []
			},
			"dependsOn": []
		}
	]
}